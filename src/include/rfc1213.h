/*
 * This file has been generated by smi-compile. Do not edit.
 * It is based on the MIB module RFC1213-MIB.
 */

typedef struct _value_string {
  unsigned int  value;
  char   *strptr;
} value_string;


/*
 * Derived from type of MIB node RFC1213-MIB.ifType.
 *
 * The type of interface, distinguished according to
 * the physical/link protocol(s) immediately `below'
 * the network layer in the protocol stack.
 */
static const value_string ifType[] = {
  { 1, "other"},
  { 2, "regular1822"},
  { 3, "hdh1822"},
  { 4, "ddn-x25"},
  { 5, "rfc877-x25"},
  { 6, "ethernet-csmacd"},
  { 7, "iso88023-csmacd"},
  { 8, "iso88024-tokenBus"},
  { 9, "iso88025-tokenRing"},
  { 10, "iso88026-man"},
  { 11, "starLan"},
  { 12, "proteon-10Mbit"},
  { 13, "proteon-80Mbit"},
  { 14, "hyperchannel"},
  { 15, "fddi"},
  { 16, "lapb"},
  { 17, "sdlc"},
  { 18, "ds1"},
  { 19, "e1"},
  { 20, "basicISDN"},
  { 21, "primaryISDN"},
  { 22, "propPointToPointSerial"},
  { 23, "ppp"},
  { 24, "softwareLoopback"},
  { 25, "eon"},
  { 26, "ethernet-3Mbit"},
  { 27, "nsip"},
  { 28, "slip"},
  { 29, "ultra"},
  { 30, "ds3"},
  { 31, "sip"},
  { 32, "frame-relay"},
  { 0, NULL}};


/*
 * Derived from type of MIB node RFC1213-MIB.ifAdminStatus.
 *
 * The desired state of the interface.  The
 * testing(3) state indicates that no operational
 * packets can be passed.
 */
/*
static const value_string ifAdminStatus[] = {
  { 1, "up"},
  { 2, "down"},
  { 3, "testing"},
  { 0, NULL}};
*/

/*
 * Derived from type of MIB node RFC1213-MIB.ifOperStatus.
 *
 * The current operational state of the interface.
 * The testing(3) state indicates that no operational
 * packets can be passed.
 */
static const value_string ifOperStatus[] = {
  { 1, "up"},
  { 2, "down"},
  { 3, "testing"},
  { 0, NULL}};


/*
 * Derived from type of MIB node RFC1213-MIB.ipForwarding.
 *
 * The indication of whether this entity is acting
 * as an IP gateway in respect to the forwarding of
 * datagrams received by, but not addressed to, this
 * entity.  IP gateways forward datagrams.  IP hosts
 * do not (except those source-routed via the host).
 *
 * Note that for some managed nodes, this object may
 * take on only a subset of the values possible.
 * Accordingly, it is appropriate for an agent to
 * return a `badValue' response if a management
 * station attempts to change this object to an
 * inappropriate value.
 */
/*
static const value_string ipForwarding[] = {
  { 1, "forwarding"},
  { 2, "not-forwarding"},
  { 0, NULL}};
*/

/*
 * Derived from type of MIB node RFC1213-MIB.ipRouteType.
 *
 * The type of route.  Note that the values
 * direct(3) and indirect(4) refer to the notion of
 * direct and indirect routing in the IP
 * architecture.
 *
 * Setting this object to the value invalid(2) has
 * the effect of invalidating the corresponding entry
 * in the ipRouteTable object.  That is, it
 * effectively dissasociates the destination
 * identified with said entry from the route
 * identified with said entry.  It is an
 * implementation-specific matter as to whether the
 * agent removes an invalidated entry from the table.
 * Accordingly, management stations must be prepared
 * to receive tabular information from agents that
 * corresponds to entries not currently in use.
 * Proper interpretation of such entries requires
 * examination of the relevant ipRouteType object.
 */
/*
static const value_string ipRouteType[] = {
  { 1, "other"},
  { 2, "invalid"},
  { 3, "direct"},
  { 4, "indirect"},
  { 0, NULL}};
*/

/*
 * Derived from type of MIB node RFC1213-MIB.ipRouteProto.
 *
 * The routing mechanism via which this route was
 * learned.  Inclusion of values for gateway routing
 * protocols is not intended to imply that hosts
 * should support those protocols.
 */
/*
static const value_string ipRouteProto[] = {
  { 1, "other"},
  { 2, "local"},
  { 3, "netmgmt"},
  { 4, "icmp"},
  { 5, "egp"},
  { 6, "ggp"},
  { 7, "hello"},
  { 8, "rip"},
  { 9, "is-is"},
  { 10, "es-is"},
  { 11, "ciscoIgrp"},
  { 12, "bbnSpfIgp"},
  { 13, "ospf"},
  { 14, "bgp"},
  { 0, NULL}};
*/

/*
 * Derived from type of MIB node RFC1213-MIB.ipNetToMediaType.
 *
 * The type of mapping.
 *
 * Setting this object to the value invalid(2) has
 * the effect of invalidating the corresponding entry
 * in the ipNetToMediaTable.  That is, it effectively
 * dissasociates the interface identified with said
 * entry from the mapping identified with said entry.
 * It is an implementation-specific matter as to
 * whether the agent removes an invalidated entry
 * from the table.  Accordingly, management stations
 * must be prepared to receive tabular information
 * from agents that corresponds to entries not
 * currently in use.  Proper interpretation of such
 * entries requires examination of the relevant
 * ipNetToMediaType object.
 */
/*
static const value_string ipNetToMediaType[] = {
  { 1, "other"},
  { 2, "invalid"},
  { 3, "dynamic"},
  { 4, "static"},
  { 0, NULL}};
*/

/*
 * Derived from type of MIB node RFC1213-MIB.tcpRtoAlgorithm.
 *
 * The algorithm used to determine the timeout value
 * used for retransmitting unacknowledged octets.
 */
/*
static const value_string tcpRtoAlgorithm[] = {
  { 1, "other"},
  { 2, "constant"},
  { 3, "rsre"},
  { 4, "vanj"},
  { 0, NULL}};
*/

/*
 * Derived from type of MIB node RFC1213-MIB.tcpConnState.
 *
 * The state of this TCP connection.
 *
 * The only value which may be set by a management
 * station is deleteTCB(12).  Accordingly, it is
 * appropriate for an agent to return a `badValue'
 * response if a management station attempts to set
 * this object to any other value.
 *
 * If a management station sets this object to the
 * value deleteTCB(12), then this has the effect of
 * deleting the TCB (as defined in RFC 793) of the
 * corresponding connection on the managed node,
 * resulting in immediate termination of the
 * connection.
 *
 * As an implementation-specific option, a RST
 * segment may be sent from the managed node to the
 * other TCP endpoint (note however that RST segments
 * are not sent reliably).
 */
/*
static const value_string tcpConnState[] = {
  { 1, "closed"},
  { 2, "listen"},
  { 3, "synSent"},
  { 4, "synReceived"},
  { 5, "established"},
  { 6, "finWait1"},
  { 7, "finWait2"},
  { 8, "closeWait"},
  { 9, "lastAck"},
  { 10, "closing"},
  { 11, "timeWait"},
  { 12, "deleteTCB"},
  { 0, NULL}};
  */

/*
 * Derived from type of MIB node RFC1213-MIB.egpNeighState.
 *
 * The EGP state of the local system with respect to
 * this entry's EGP neighbor.  Each EGP state is
 * represented by a value that is one greater than
 * the numerical value associated with said state in
 * RFC 904.
 */
/*
static const value_string egpNeighState[] = {
  { 1, "idle"},
  { 2, "acquisition"},
  { 3, "down"},
  { 4, "up"},
  { 5, "cease"},
  { 0, NULL}};
*/

/*
 * Derived from type of MIB node RFC1213-MIB.egpNeighMode.
 *
 * The polling mode of this EGP entity, either
 * passive or active.
 */
/*
static const value_string egpNeighMode[] = {
  { 1, "active"},
  { 2, "passive"},
  { 0, NULL}};
*/

/*
 * Derived from type of MIB node RFC1213-MIB.egpNeighEventTrigger.
 *
 * A control variable used to trigger operator-
 * initiated Start and Stop events.  When read, this
 * variable always returns the most recent value that
 * egpNeighEventTrigger was set to.  If it has not
 * been set since the last initialization of the
 * network management subsystem on the node, it
 * returns a value of `stop'.
 *
 * When set, this variable causes a Start or Stop
 * event on the specified neighbor, as specified on
 * pages 8-10 of RFC 904.  Briefly, a Start event
 * causes an Idle peer to begin neighbor acquisition
 * and a non-Idle peer to reinitiate neighbor
 * acquisition.  A stop event causes a non-Idle peer
 * to return to the Idle state until a Start event
 * occurs, either via egpNeighEventTrigger or
 * otherwise.
 */
/*
static const value_string egpNeighEventTrigger[] = {
  { 1, "start"},
  { 2, "stop"},
  { 0, NULL}};
*/

/*
 * Derived from type of MIB node RFC1213-MIB.snmpEnableAuthenTraps.
 *
 * Indicates whether the SNMP agent process is
 * permitted to generate authentication-failure
 * traps.  The value of this object overrides any
 * configuration information; as such, it provides a
 * means whereby all authentication-failure traps may
 * be disabled.
 *
 * Note that it is strongly recommended that this
 * object be stored in non-volatile memory so that it
 * remains constant between re-initializations of the
 * network management system.
 */
/*
static const value_string snmpEnableAuthenTraps[] = {
  { 1, "enabled"},
  { 2, "disabled"},
  { 0, NULL}};

#define MIB_2 1,3,6,1,2,1
#define SYSTEM 1,3,6,1,2,1,1
#define SYSDESCR 1,3,6,1,2,1,1,1
#define SYSOBJECTID 1,3,6,1,2,1,1,2
#define SYSUPTIME 1,3,6,1,2,1,1,3
#define SYSCONTACT 1,3,6,1,2,1,1,4
#define SYSNAME 1,3,6,1,2,1,1,5
#define SYSLOCATION 1,3,6,1,2,1,1,6
#define SYSSERVICES 1,3,6,1,2,1,1,7
#define INTERFACES 1,3,6,1,2,1,2
#define IFNUMBER 1,3,6,1,2,1,2,1
#define IFTABLE 1,3,6,1,2,1,2,2
#define IFENTRY 1,3,6,1,2,1,2,2,1
#define IFINDEX 1,3,6,1,2,1,2,2,1,1
#define IFDESCR 1,3,6,1,2,1,2,2,1,2
#define IFTYPE 1,3,6,1,2,1,2,2,1,3
#define IFMTU 1,3,6,1,2,1,2,2,1,4
#define IFSPEED 1,3,6,1,2,1,2,2,1,5
#define IFPHYSADDRESS 1,3,6,1,2,1,2,2,1,6
#define IFADMINSTATUS 1,3,6,1,2,1,2,2,1,7
#define IFOPERSTATUS 1,3,6,1,2,1,2,2,1,8
#define IFLASTCHANGE 1,3,6,1,2,1,2,2,1,9
#define IFINOCTETS 1,3,6,1,2,1,2,2,1,10
#define IFINUCASTPKTS 1,3,6,1,2,1,2,2,1,11
#define IFINNUCASTPKTS 1,3,6,1,2,1,2,2,1,12
#define IFINDISCARDS 1,3,6,1,2,1,2,2,1,13
#define IFINERRORS 1,3,6,1,2,1,2,2,1,14
#define IFINUNKNOWNPROTOS 1,3,6,1,2,1,2,2,1,15
#define IFOUTOCTETS 1,3,6,1,2,1,2,2,1,16
#define IFOUTUCASTPKTS 1,3,6,1,2,1,2,2,1,17
#define IFOUTNUCASTPKTS 1,3,6,1,2,1,2,2,1,18
#define IFOUTDISCARDS 1,3,6,1,2,1,2,2,1,19
#define IFOUTERRORS 1,3,6,1,2,1,2,2,1,20
#define IFOUTQLEN 1,3,6,1,2,1,2,2,1,21
#define IFSPECIFIC 1,3,6,1,2,1,2,2,1,22
#define AT 1,3,6,1,2,1,3
#define ATTABLE 1,3,6,1,2,1,3,1
#define ATENTRY 1,3,6,1,2,1,3,1,1
#define ATIFINDEX 1,3,6,1,2,1,3,1,1,1
#define ATPHYSADDRESS 1,3,6,1,2,1,3,1,1,2
#define ATNETADDRESS 1,3,6,1,2,1,3,1,1,3
#define IP 1,3,6,1,2,1,4
#define IPFORWARDING 1,3,6,1,2,1,4,1
#define IPDEFAULTTTL 1,3,6,1,2,1,4,2
#define IPINRECEIVES 1,3,6,1,2,1,4,3
#define IPINHDRERRORS 1,3,6,1,2,1,4,4
#define IPINADDRERRORS 1,3,6,1,2,1,4,5
#define IPFORWDATAGRAMS 1,3,6,1,2,1,4,6
#define IPINUNKNOWNPROTOS 1,3,6,1,2,1,4,7
#define IPINDISCARDS 1,3,6,1,2,1,4,8
#define IPINDELIVERS 1,3,6,1,2,1,4,9
#define IPOUTREQUESTS 1,3,6,1,2,1,4,10
#define IPOUTDISCARDS 1,3,6,1,2,1,4,11
#define IPOUTNOROUTES 1,3,6,1,2,1,4,12
#define IPREASMTIMEOUT 1,3,6,1,2,1,4,13
#define IPREASMREQDS 1,3,6,1,2,1,4,14
#define IPREASMOKS 1,3,6,1,2,1,4,15
#define IPREASMFAILS 1,3,6,1,2,1,4,16
#define IPFRAGOKS 1,3,6,1,2,1,4,17
#define IPFRAGFAILS 1,3,6,1,2,1,4,18
#define IPFRAGCREATES 1,3,6,1,2,1,4,19
#define IPADDRTABLE 1,3,6,1,2,1,4,20
#define IPADDRENTRY 1,3,6,1,2,1,4,20,1
#define IPADENTADDR 1,3,6,1,2,1,4,20,1,1
#define IPADENTIFINDEX 1,3,6,1,2,1,4,20,1,2
#define IPADENTNETMASK 1,3,6,1,2,1,4,20,1,3
#define IPADENTBCASTADDR 1,3,6,1,2,1,4,20,1,4
#define IPADENTREASMMAXSIZE 1,3,6,1,2,1,4,20,1,5
#define IPROUTETABLE 1,3,6,1,2,1,4,21
#define IPROUTEENTRY 1,3,6,1,2,1,4,21,1
#define IPROUTEDEST 1,3,6,1,2,1,4,21,1,1
#define IPROUTEIFINDEX 1,3,6,1,2,1,4,21,1,2
#define IPROUTEMETRIC1 1,3,6,1,2,1,4,21,1,3
#define IPROUTEMETRIC2 1,3,6,1,2,1,4,21,1,4
#define IPROUTEMETRIC3 1,3,6,1,2,1,4,21,1,5
#define IPROUTEMETRIC4 1,3,6,1,2,1,4,21,1,6
#define IPROUTENEXTHOP 1,3,6,1,2,1,4,21,1,7
#define IPROUTETYPE 1,3,6,1,2,1,4,21,1,8
#define IPROUTEPROTO 1,3,6,1,2,1,4,21,1,9
#define IPROUTEAGE 1,3,6,1,2,1,4,21,1,10
#define IPROUTEMASK 1,3,6,1,2,1,4,21,1,11
#define IPROUTEMETRIC5 1,3,6,1,2,1,4,21,1,12
#define IPROUTEINFO 1,3,6,1,2,1,4,21,1,13
#define IPNETTOMEDIATABLE 1,3,6,1,2,1,4,22
#define IPNETTOMEDIAENTRY 1,3,6,1,2,1,4,22,1
#define IPNETTOMEDIAIFINDEX 1,3,6,1,2,1,4,22,1,1
#define IPNETTOMEDIAPHYSADDRESS 1,3,6,1,2,1,4,22,1,2
#define IPNETTOMEDIANETADDRESS 1,3,6,1,2,1,4,22,1,3
#define IPNETTOMEDIATYPE 1,3,6,1,2,1,4,22,1,4
#define IPROUTINGDISCARDS 1,3,6,1,2,1,4,23
#define ICMP 1,3,6,1,2,1,5
#define ICMPINMSGS 1,3,6,1,2,1,5,1
#define ICMPINERRORS 1,3,6,1,2,1,5,2
#define ICMPINDESTUNREACHS 1,3,6,1,2,1,5,3
#define ICMPINTIMEEXCDS 1,3,6,1,2,1,5,4
#define ICMPINPARMPROBS 1,3,6,1,2,1,5,5
#define ICMPINSRCQUENCHS 1,3,6,1,2,1,5,6
#define ICMPINREDIRECTS 1,3,6,1,2,1,5,7
#define ICMPINECHOS 1,3,6,1,2,1,5,8
#define ICMPINECHOREPS 1,3,6,1,2,1,5,9
#define ICMPINTIMESTAMPS 1,3,6,1,2,1,5,10
#define ICMPINTIMESTAMPREPS 1,3,6,1,2,1,5,11
#define ICMPINADDRMASKS 1,3,6,1,2,1,5,12
#define ICMPINADDRMASKREPS 1,3,6,1,2,1,5,13
#define ICMPOUTMSGS 1,3,6,1,2,1,5,14
#define ICMPOUTERRORS 1,3,6,1,2,1,5,15
#define ICMPOUTDESTUNREACHS 1,3,6,1,2,1,5,16
#define ICMPOUTTIMEEXCDS 1,3,6,1,2,1,5,17
#define ICMPOUTPARMPROBS 1,3,6,1,2,1,5,18
#define ICMPOUTSRCQUENCHS 1,3,6,1,2,1,5,19
#define ICMPOUTREDIRECTS 1,3,6,1,2,1,5,20
#define ICMPOUTECHOS 1,3,6,1,2,1,5,21
#define ICMPOUTECHOREPS 1,3,6,1,2,1,5,22
#define ICMPOUTTIMESTAMPS 1,3,6,1,2,1,5,23
#define ICMPOUTTIMESTAMPREPS 1,3,6,1,2,1,5,24
#define ICMPOUTADDRMASKS 1,3,6,1,2,1,5,25
#define ICMPOUTADDRMASKREPS 1,3,6,1,2,1,5,26
#define TCP 1,3,6,1,2,1,6
#define TCPRTOALGORITHM 1,3,6,1,2,1,6,1
#define TCPRTOMIN 1,3,6,1,2,1,6,2
#define TCPRTOMAX 1,3,6,1,2,1,6,3
#define TCPMAXCONN 1,3,6,1,2,1,6,4
#define TCPACTIVEOPENS 1,3,6,1,2,1,6,5
#define TCPPASSIVEOPENS 1,3,6,1,2,1,6,6
#define TCPATTEMPTFAILS 1,3,6,1,2,1,6,7
#define TCPESTABRESETS 1,3,6,1,2,1,6,8
#define TCPCURRESTAB 1,3,6,1,2,1,6,9
#define TCPINSEGS 1,3,6,1,2,1,6,10
#define TCPOUTSEGS 1,3,6,1,2,1,6,11
#define TCPRETRANSSEGS 1,3,6,1,2,1,6,12
#define TCPCONNTABLE 1,3,6,1,2,1,6,13
#define TCPCONNENTRY 1,3,6,1,2,1,6,13,1
#define TCPCONNSTATE 1,3,6,1,2,1,6,13,1,1
#define TCPCONNLOCALADDRESS 1,3,6,1,2,1,6,13,1,2
#define TCPCONNLOCALPORT 1,3,6,1,2,1,6,13,1,3
#define TCPCONNREMADDRESS 1,3,6,1,2,1,6,13,1,4
#define TCPCONNREMPORT 1,3,6,1,2,1,6,13,1,5
#define TCPINERRS 1,3,6,1,2,1,6,14
#define TCPOUTRSTS 1,3,6,1,2,1,6,15
#define UDP 1,3,6,1,2,1,7
#define UDPINDATAGRAMS 1,3,6,1,2,1,7,1
#define UDPNOPORTS 1,3,6,1,2,1,7,2
#define UDPINERRORS 1,3,6,1,2,1,7,3
#define UDPOUTDATAGRAMS 1,3,6,1,2,1,7,4
#define UDPTABLE 1,3,6,1,2,1,7,5
#define UDPENTRY 1,3,6,1,2,1,7,5,1
#define UDPLOCALADDRESS 1,3,6,1,2,1,7,5,1,1
#define UDPLOCALPORT 1,3,6,1,2,1,7,5,1,2
#define EGP 1,3,6,1,2,1,8
#define EGPINMSGS 1,3,6,1,2,1,8,1
#define EGPINERRORS 1,3,6,1,2,1,8,2
#define EGPOUTMSGS 1,3,6,1,2,1,8,3
#define EGPOUTERRORS 1,3,6,1,2,1,8,4
#define EGPNEIGHTABLE 1,3,6,1,2,1,8,5
#define EGPNEIGHENTRY 1,3,6,1,2,1,8,5,1
#define EGPNEIGHSTATE 1,3,6,1,2,1,8,5,1,1
#define EGPNEIGHADDR 1,3,6,1,2,1,8,5,1,2
#define EGPNEIGHAS 1,3,6,1,2,1,8,5,1,3
#define EGPNEIGHINMSGS 1,3,6,1,2,1,8,5,1,4
#define EGPNEIGHINERRS 1,3,6,1,2,1,8,5,1,5
#define EGPNEIGHOUTMSGS 1,3,6,1,2,1,8,5,1,6
#define EGPNEIGHOUTERRS 1,3,6,1,2,1,8,5,1,7
#define EGPNEIGHINERRMSGS 1,3,6,1,2,1,8,5,1,8
#define EGPNEIGHOUTERRMSGS 1,3,6,1,2,1,8,5,1,9
#define EGPNEIGHSTATEUPS 1,3,6,1,2,1,8,5,1,10
#define EGPNEIGHSTATEDOWNS 1,3,6,1,2,1,8,5,1,11
#define EGPNEIGHINTERVALHELLO 1,3,6,1,2,1,8,5,1,12
#define EGPNEIGHINTERVALPOLL 1,3,6,1,2,1,8,5,1,13
#define EGPNEIGHMODE 1,3,6,1,2,1,8,5,1,14
#define EGPNEIGHEVENTTRIGGER 1,3,6,1,2,1,8,5,1,15
#define EGPAS 1,3,6,1,2,1,8,6
#define TRANSMISSION 1,3,6,1,2,1,10
#define SNMP 1,3,6,1,2,1,11
#define SNMPINPKTS 1,3,6,1,2,1,11,1
#define SNMPOUTPKTS 1,3,6,1,2,1,11,2
#define SNMPINBADVERSIONS 1,3,6,1,2,1,11,3
#define SNMPINBADCOMMUNITYNAMES 1,3,6,1,2,1,11,4
#define SNMPINBADCOMMUNITYUSES 1,3,6,1,2,1,11,5
#define SNMPINASNPARSEERRS 1,3,6,1,2,1,11,6
#define SNMPINTOOBIGS 1,3,6,1,2,1,11,8
#define SNMPINNOSUCHNAMES 1,3,6,1,2,1,11,9
#define SNMPINBADVALUES 1,3,6,1,2,1,11,10
#define SNMPINREADONLYS 1,3,6,1,2,1,11,11
#define SNMPINGENERRS 1,3,6,1,2,1,11,12
#define SNMPINTOTALREQVARS 1,3,6,1,2,1,11,13
#define SNMPINTOTALSETVARS 1,3,6,1,2,1,11,14
#define SNMPINGETREQUESTS 1,3,6,1,2,1,11,15
#define SNMPINGETNEXTS 1,3,6,1,2,1,11,16
#define SNMPINSETREQUESTS 1,3,6,1,2,1,11,17
#define SNMPINGETRESPONSES 1,3,6,1,2,1,11,18
#define SNMPINTRAPS 1,3,6,1,2,1,11,19
#define SNMPOUTTOOBIGS 1,3,6,1,2,1,11,20
#define SNMPOUTNOSUCHNAMES 1,3,6,1,2,1,11,21
#define SNMPOUTBADVALUES 1,3,6,1,2,1,11,22
#define SNMPOUTGENERRS 1,3,6,1,2,1,11,24
#define SNMPOUTGETREQUESTS 1,3,6,1,2,1,11,25
#define SNMPOUTGETNEXTS 1,3,6,1,2,1,11,26
#define SNMPOUTSETREQUESTS 1,3,6,1,2,1,11,27
#define SNMPOUTGETRESPONSES 1,3,6,1,2,1,11,28
#define SNMPOUTTRAPS 1,3,6,1,2,1,11,29
#define SNMPENABLEAUTHENTRAPS 1,3,6,1,2,1,11,30
*/
